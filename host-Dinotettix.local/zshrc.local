export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export GOPATH=$HOME/.bin/gopath

PATH=$PATH:$HOME/.krew/bin
PATH=/usr/local/bin:$PATH
PATH=$PATH:$HOME/Library/Python/2.7/bin/
PATH="$HOME/.dotnet/tools:$PATH"
PATH="$HOME/.cargo/bin:$PATH"
PATH="$GOPATH/bin:$PATH"
PATH="$HOME/.opam/default/bin:$PATH"
PATH="$HOME/Library/Python/3.7/bin:$PATH"
PATH="$HOME/Library/Python/3.8/bin:$PATH"
PATH="$HOME/.bin:$PATH"
PATH="$HOME/.local/bin:$PATH"
PATH="/usr/local/opt/llvm/bin:$PATH"
export PATH

export GPG_TTY=$(tty)

function load_npm_token() {
  if [ -f ~/.npmrc ]; then
    export NPM_TOKEN=$(cat ~/.npmrc | sed -e "s/.*_authToken=//")
  else
    echo 'No npm token found'
  fi
}
load_npm_token

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'; fi

# Wasmer
export WASMER_DIR="/Users/jens/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

alias dc=". dc"

eval $(opam env)

function aws-login {
  if [[ -z "${OP_SESSION_datacamp}" ]]; then
    echo "Did not found a OnePassword token in the env..."
    eval $(op signin datacamp)
  elif ! op signin datacamp --raw --session ${OP_SESSION_datacamp} >/dev/null 2>&1 ; then
    echo "OnePassword token is invalid..."
    eval $(op signin datacamp)
  fi
  jo username=jens password=$(op get item OneLogin | jq -r '.details.fields[] | select(.designation == "password").value') -s otp=$(op get totp OneLogin) | onelogin-aws login -C $1
}
alias al="aws-login"
export ONELOGIN_AWS_CLI_USERNAME=jens

alias opl='eval $(op signin datacamp)'

zstyle ':completion:*' list-suffixes
zstyle ':completion:*' expand prefix suffix

function terraform-local {
  aws-login terraform-dev-staging
  aws-login terraform-dev-prod
  export AWS_SDK_LOAD_CONFIG=true
  export AWS_PROFILE=datacamp-prod
}
alias tfl="terraform-local"

export AWS_REGION=us-east-1

if [ -e /Users/jens/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/jens/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

export ZK_NOTEBOOK_DIR="$HOME/Workspace/zettels"

function ecr-docker-login() {
  AWS_PROFILE="datacamp-staging-developer" aws ecr get-login-password | docker login --username AWS --password-stdin 487088987264.dkr.ecr.us-east-1.amazonaws.com
}
