if &compatible
    set nocompatible
end
set t_Co=256

call plug#begin('~/.vim/bundle')

" ===========================
" ===   Git Integration   ===
" ===========================
" Add git commands
Plug 'tpope/vim-fugitive'

" Add git diff symbols in the gutter
Plug 'airblade/vim-gitgutter'

" ========================
" ===   Improved VIM   ===
" ========================
" Close brackets automatically
Plug 'Raimondi/delimitMate'

" Closes def automatically
Plug 'tpope/vim-endwise'


" Show indentation line
Plug 'Yggdroot/indentLine'

" (Un)comment line
Plug 'scrooloose/nerdcommenter'

" Easily handle quotes, ...
Plug 'tpope/vim-surround'

" Case-sensitive replace + conversion between cases (snake-case, ...)
Plug 'tpope/vim-abolish'

" Add extra [ commands
Plug 'tpope/vim-unimpaired'

" Easily move to a certain spot in the file
Plug 'easymotion/vim-easymotion'

" ================
" ===   Repl   ===
" ================
" Plug 'ujihisa/repl.vim'
" " Dependencies:
" Plug 'Shougo/vimproc.vim', {'do' : 'make'}
" Plug 'Shougo/vimshell.vim'

" =====================
" ===   Utilities   ===
" =====================
" Generate uuid
Plug 'kburdett/vim-nuuid'

" See colors inline
Plug 'chrisbra/Colorizer'

" Copy line on github
Plug 'ruanyl/vim-gh-line'

" Time tracking (WakaTime)
Plug 'wakatime/vim-wakatime'

" EditorConfig
Plug 'editorconfig/editorconfig-vim'

" Add a :Scratch buffer
Plug 'vim-scripts/scratch.vim'

" ==========================
" ===   Autocompletion   ===
" ==========================
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'yami-beta/asyncomplete-omni.vim'
Plug 'prabirshrestha/asyncomplete-ultisnips.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete-lsp.vim'

" =============================
" ===   Checkers/Builders   ===
" =============================
Plug 'w0rp/ale'

" ==================
" ===   Search   ===
" ==================
Plug 'mileszs/ack.vim'

" ===========================
" ===   File Management   ===
" ===========================
" FZF
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" CtrlP
" Plug 'ctrlpvim/ctrlp.vim'

" ==========================
" ===   Test Managment   ===
" ==========================
Plug 'janko-m/vim-test'
" Dependencies
Plug 'tpope/vim-dispatch'

" ==============================
" ===   Project Management   ===
" ==============================
" File Sidebar
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' }

" Tags sidebar
Plug 'majutsushi/tagbar'

" bottombar
Plug 'vim-airline/vim-airline'

" ===============================
" ===   Local Configuration   ===
" ===============================
" Project config
Plug 'tpope/vim-projectionist'

" Allow adding a local vimrc file to a project
Plug 'embear/vim-localvimrc'

" ==================
" ===   Themes   ===
" ==================
Plug 'chriskempson/base16-vim'
Plug 'joshdick/onedark.vim'
Plug 'godlygeek/csapprox'

" ====================
" ===   Snippets   ===
" ====================
Plug 'sirver/UltiSnips'
Plug 'entropitor/snippets'

" =====================
" ===   Languages   ===
" =====================

" Antlr
Plug 'jrozner/vim-antlr', {'for': ['antlr']}

" Go
Plug 'fatih/vim-go', {'for': ['go']}

" Graphql
Plug 'jparise/vim-graphql', {'for': ['graphql']}

" JavaScript
Plug 'othree/yajs.vim', { 'for': 'javascript' }
Plug 'galooshi/vim-import-js', {'for': ['javascript', 'typescript']}

" Ledger
Plug 'ledger/vim-ledger', {'for': ['ledger']}

" Platuml
Plug 'aklt/plantuml-syntax', {'for': ['plantuml']}

" Prolog
Plug 'mndrix/prolog.vim', {'for': ['prolog']}

" Reason
Plug 'reasonml-editor/vim-reason-plus', {'for': ['reason']}

" Ruby
Plug 'vim-ruby/vim-ruby', {'for': ['ruby']}
Plug 'tpope/vim-rails', {'for': ['ruby']}
" Plug 'thoughtbot/vim-rspec', {'for': ['ruby']}

" Rust
Plug 'rust-lang/rust.vim', {'for': ['rust']}

" SQL
Plug 'tpope/vim-dadbod', {'for': ['sql']}

" Typescript
Plug 'leafgarland/typescript-vim', {'for': ['typescript']}

" Yaml
Plug 'ingydotnet/yaml-vim', {'for': ['yaml']}


" ================================
" ===   Host Specific Config   ===
" ================================
" if filereadable(expand("~/.vimrc.bundles.local"))
"     source ~/.vimrc.bundles.local
" endif

call plug#end()
